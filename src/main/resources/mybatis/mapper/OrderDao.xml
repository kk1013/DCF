<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SQL 끝에 ; 세미콜론을 넣지 마세요! -->

<mapper namespace="com.study.springboot.dao.IOrderDao">
	<insert id="order_insert" parameterType="com.study.springboot.dto.OrderDto">
	INSERT INTO DCF_ORDER VALUES(#{ order_idx }, 0, SYSDATE, #{ order_user_idx }, #{ user_name }, #{ user_phone }, #{ user_address })
	</insert>
	<insert id="order_detail_insert" parameterType="com.study.springboot.dto.OrderDto">
	INSERT INTO DCF_ORDER_DETAIL VALUES(ORDER_IDX_SEQ.NEXTVAL, #{ order_idx }, #{ order_pd_idx } , #{ order_quantity }, #{ product_price })
	</insert>
	<select id="beforeDTO" resultType="_int">
	  SELECT COUNT(order_status) FROM dcf_order WHERE order_status=0
	</select>
	
	<select id="duringDTO" resultType="_int">
	  SELECT COUNT(order_status) FROM dcf_order WHERE order_status=1
	</select>
	
	<select id="afterDTO" resultType="_int">
	  SELECT COUNT(order_status) FROM dcf_order WHERE order_status=2
	</select>
	
	<select id="cancelDTO" resultType="_int">
	  SELECT COUNT(order_status) FROM dcf_order WHERE order_status=3
	</select>
	
	<select id="orderAllDTO" resultType="_int">
	  SELECT COUNT(order_status) FROM dcf_order
	</select>
	

	<select id="order_list" resultType="com.study.springboot.dto.OrderDto">
	SELECT 
	a.*,
	p.PRODUCT_NAME,
	p.PRODUCT_PRICE,
	u.USER_NAME
	FROM DCF_ORDER a,
	DCF_PRODUCT p,
	DCF_USERS u
	WHERE 
	a.ORDER_PD_IDX = p.PRODUCT_IDX
	AND a.ORDER_USER_IDX = u.USER_IDX
	ORDER BY a.ORDER_IDX ASC
	</select>
	
	<select id="single_select" resultType="com.study.springboot.dto.OrderDto">
	SELECT 
	a.*,
	u.USER_NAME,
	u.USER_ID,
	u.USER_PHONE,
	u.USER_ADDRESS,
	u.USER_EMAIL,
	p.PRODUCT_NAME,
	p.PRODUCT_IMAGE,
	p.PRODUCT_PRICE
	FROM DCF_ORDER a,
	DCF_PRODUCT p,
	DCF_USERS u 
	WHERE
	a.ORDER_PD_IDX = p.PRODUCT_IDX 
	AND a.ORDER_USER_IDX = u.USER_IDX 
	AND a.ORDER_IDX = #{param1}
	ORDER BY a.ORDER_IDX ASC
	</select>

	<select id="product" resultType="com.study.springboot.dto.OrderDto">
	SELECT 
	a.*,
	u.USER_NAME,
	u.USER_ID,
	u.USER_PHONE,
	u.USER_ADDRESS,
	u.USER_EMAIL,
	p.PRODUCT_NAME,
	p.PRODUCT_IMAGE,
	p.PRODUCT_PRICE
	FROM DCF_ORDER a,
	DCF_PRODUCT p,
	DCF_USERS u 
	WHERE
	a.ORDER_PD_IDX = p.PRODUCT_IDX 
	AND a.ORDER_USER_IDX = u.USER_IDX 
	AND a.ORDER_IDX = #{param1}
	ORDER BY a.ORDER_IDX ASC
	</select>
	
	<update id="order_status_update">
	UPDATE DCF_ORDER SET ORDER_STATUS=#{param1} WHERE ORDER_IDX=#{param2}
	</update>
	
	<select id="payments_list" resultType="com.study.springboot.dto.OrderDto">
	SELECT user_name, user_id, user_phone FROM dcf_users WHERE user_idx=#{param1}
	</select>
	
	<select id="payments_product" resultType="com.study.springboot.dto.OrderDto">
	SELECT * FROM dcf_basket, dcf_product WHERE dcf_basket.basket_pd_idx = dcf_product.product_idx and basket_idx =#{ param1 }
	</select>
	
	<select id="payments_product_check" resultType="com.study.springboot.dto.OrderDto">
	SELECT * FROM dcf_basket, dcf_product WHERE ${ param1 }
	</select>
	
</mapper>